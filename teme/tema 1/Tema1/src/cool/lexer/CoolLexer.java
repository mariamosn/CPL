// Generated from /home/maria/Downloads/Tema 1 - Analiză lexicală și sintactică (deadline soft 27 noiembrie, deadline hard 30 noiembrie)-202/Tema1/src/cool/lexer/CoolLexer.g4 by ANTLR 4.10.1

    package cool.lexer;	

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CoolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ERROR=1, CLASS=2, INHERITS=3, NEW=4, IF=5, THEN=6, ELSE=7, FI=8, ISVOID=9, 
		LET=10, IN=11, WHILE=12, LOOP=13, POOL=14, CASE=15, OF=16, ESAC=17, NOT=18, 
		BOOL=19, TYPE=20, ID=21, INT=22, STRING=23, SEMI=24, COMMA=25, ASSIGN=26, 
		LPAREN=27, RPAREN=28, LBRACE=29, RBRACE=30, PLUS=31, MINUS=32, MULT=33, 
		DIV=34, EQUAL=35, LT=36, LE=37, COLON=38, AT=39, DOT=40, RES=41, NEG=42, 
		LINE_COMMENT=43, BLOCK_COMMENT=44, UNMATCHED_BLOCK_COMMENT_END=45, WS=46, 
		INVALID_CHAR=47;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"CLASS", "INHERITS", "NEW", "IF", "THEN", "ELSE", "FI", "ISVOID", "LET", 
			"IN", "WHILE", "LOOP", "POOL", "CASE", "OF", "ESAC", "NOT", "BOOL", "LETTER", 
			"UP_LETTER", "LOW_LETTER", "TYPE", "ID", "DIGIT", "INT", "STRING", "SEMI", 
			"COMMA", "ASSIGN", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", "MINUS", 
			"MULT", "DIV", "EQUAL", "LT", "LE", "COLON", "AT", "DOT", "RES", "NEG", 
			"LINE_COMMENT", "BLOCK_COMMENT", "UNMATCHED_BLOCK_COMMENT_END", "WS", 
			"INVALID_CHAR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'class'", "'inherits'", "'new'", "'if'", "'then'", "'else'", 
			"'fi'", "'isvoid'", "'let'", "'in'", "'while'", "'loop'", "'pool'", "'case'", 
			"'of'", "'esac'", "'not'", null, null, null, null, null, "';'", "','", 
			"'<-'", "'('", "')'", "'{'", "'}'", "'+'", "'-'", "'*'", "'/'", "'='", 
			"'<'", "'<='", "':'", "'@'", "'.'", "'=>'", "'~'", null, null, "'*)'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ERROR", "CLASS", "INHERITS", "NEW", "IF", "THEN", "ELSE", "FI", 
			"ISVOID", "LET", "IN", "WHILE", "LOOP", "POOL", "CASE", "OF", "ESAC", 
			"NOT", "BOOL", "TYPE", "ID", "INT", "STRING", "SEMI", "COMMA", "ASSIGN", 
			"LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", "MINUS", "MULT", "DIV", 
			"EQUAL", "LT", "LE", "COLON", "AT", "DOT", "RES", "NEG", "LINE_COMMENT", 
			"BLOCK_COMMENT", "UNMATCHED_BLOCK_COMMENT_END", "WS", "INVALID_CHAR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	    
	    private void raiseError(String msg) {
	        setText(msg);
	        setType(ERROR);
	    }


	public CoolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CoolLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 25:
			STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 46:
			BLOCK_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 47:
			UNMATCHED_BLOCK_COMMENT_END_action((RuleContext)_localctx, actionIndex);
			break;
		case 49:
			INVALID_CHAR_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			 raiseError("xString contains null characterx"); 
			break;
		case 1:
			 raiseError("EOF in string constant"); 
			break;
		case 2:
			 raiseError("Unterminated string constant"); 
			break;
		case 3:

			        String s = getText();
			        s = s.substring(1, s.length() - 1);
			        s = s.replace("\\t", "\t");
			        s = s.replace("\\b", "\b");
			        s = s.replace("\\f", "\f");
			        s = s.replace("\\\r\n", "\r\n");
			        s = s.replace("\\\n", "\n");
			        s = s.replace("\\n", "\n");

			        StringBuilder s2 = new StringBuilder();

			        for (int i = 0; i < s.length(); i++) {
			            if (s.charAt(i) != '\\') {
			                s2.append(s.charAt(i));
			            } else {
			                if (s.charAt(i + 1) == '\\') {
			                    s2.append(s.charAt(i + 1));
			                    i++;
			                }
			            }
			        }

			        if (s2.toString().length() > 1024) {
			            raiseError("String constant too long");
			        } else {
			            setText(s2.toString());
			        }
			    
			break;
		}
	}
	private void BLOCK_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4:
			 raiseError("EOF in comment"); 
			break;
		case 5:
			 skip(); 
			break;
		}
	}
	private void UNMATCHED_BLOCK_COMMENT_END_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 6:
			 raiseError("Unmatched *)"); 
			break;
		}
	}
	private void INVALID_CHAR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 7:

			        String c = getText();
			        raiseError("Invalid character: " + c);
			    
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u0000/\u0157\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0003\u0011\u00c1\b\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0005\u0015\u00cd\b\u0015\n\u0015\f\u0015\u00d0\t\u0015\u0001\u0016"+
		"\u0001\u0016\u0001\u0016\u0001\u0016\u0005\u0016\u00d6\b\u0016\n\u0016"+
		"\f\u0016\u00d9\t\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0004\u0018"+
		"\u00de\b\u0018\u000b\u0018\f\u0018\u00df\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0005\u0019\u00ed\b\u0019\n\u0019\f\u0019"+
		"\u00f0\t\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019"+
		"\u0003\u0019\u00f7\b\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0003\u0019"+
		"\u00fc\b\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c"+
		"\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e"+
		"\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001"+
		"#\u0001#\u0001$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001\'\u0001\'\u0001"+
		"\'\u0001(\u0001(\u0001)\u0001)\u0001*\u0001*\u0001+\u0001+\u0001+\u0001"+
		",\u0001,\u0001-\u0001-\u0001-\u0001-\u0005-\u012b\b-\n-\f-\u012e\t-\u0001"+
		"-\u0001-\u0001-\u0003-\u0133\b-\u0001-\u0001-\u0001.\u0001.\u0001.\u0001"+
		".\u0001.\u0005.\u013c\b.\n.\f.\u013f\t.\u0001.\u0001.\u0001.\u0001.\u0001"+
		".\u0001.\u0003.\u0147\b.\u0001/\u0001/\u0001/\u0001/\u0001/\u00010\u0004"+
		"0\u014f\b0\u000b0\f0\u0150\u00010\u00010\u00011\u00011\u00011\u0003\u00ee"+
		"\u012c\u013d\u00002\u0001\u0002\u0003\u0003\u0005\u0004\u0007\u0005\t"+
		"\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019"+
		"\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0000\'\u0000"+
		")\u0000+\u0014-\u0015/\u00001\u00163\u00175\u00187\u00199\u001a;\u001b"+
		"=\u001c?\u001dA\u001eC\u001fE G!I\"K#M$O%Q&S\'U(W)Y*[+],_-a.c/\u0001\u0000"+
		"\u0006\u0002\u0000AZaz\u0001\u0000AZ\u0001\u0000az\u0001\u000009\u0001"+
		"\u0001\n\n\u0003\u0000\t\n\f\r  \u0168\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000"+
		"\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005"+
		"\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000"+
		"\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000"+
		"\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C"+
		"\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000"+
		"\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000"+
		"\u0000M\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q"+
		"\u0001\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000"+
		"\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000"+
		"\u0000[\u0001\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000_"+
		"\u0001\u0000\u0000\u0000\u0000a\u0001\u0000\u0000\u0000\u0000c\u0001\u0000"+
		"\u0000\u0000\u0001e\u0001\u0000\u0000\u0000\u0003k\u0001\u0000\u0000\u0000"+
		"\u0005t\u0001\u0000\u0000\u0000\u0007x\u0001\u0000\u0000\u0000\t{\u0001"+
		"\u0000\u0000\u0000\u000b\u0080\u0001\u0000\u0000\u0000\r\u0085\u0001\u0000"+
		"\u0000\u0000\u000f\u0088\u0001\u0000\u0000\u0000\u0011\u008f\u0001\u0000"+
		"\u0000\u0000\u0013\u0093\u0001\u0000\u0000\u0000\u0015\u0096\u0001\u0000"+
		"\u0000\u0000\u0017\u009c\u0001\u0000\u0000\u0000\u0019\u00a1\u0001\u0000"+
		"\u0000\u0000\u001b\u00a6\u0001\u0000\u0000\u0000\u001d\u00ab\u0001\u0000"+
		"\u0000\u0000\u001f\u00ae\u0001\u0000\u0000\u0000!\u00b3\u0001\u0000\u0000"+
		"\u0000#\u00c0\u0001\u0000\u0000\u0000%\u00c2\u0001\u0000\u0000\u0000\'"+
		"\u00c4\u0001\u0000\u0000\u0000)\u00c6\u0001\u0000\u0000\u0000+\u00c8\u0001"+
		"\u0000\u0000\u0000-\u00d1\u0001\u0000\u0000\u0000/\u00da\u0001\u0000\u0000"+
		"\u00001\u00dd\u0001\u0000\u0000\u00003\u00e1\u0001\u0000\u0000\u00005"+
		"\u00fd\u0001\u0000\u0000\u00007\u00ff\u0001\u0000\u0000\u00009\u0101\u0001"+
		"\u0000\u0000\u0000;\u0104\u0001\u0000\u0000\u0000=\u0106\u0001\u0000\u0000"+
		"\u0000?\u0108\u0001\u0000\u0000\u0000A\u010a\u0001\u0000\u0000\u0000C"+
		"\u010c\u0001\u0000\u0000\u0000E\u010e\u0001\u0000\u0000\u0000G\u0110\u0001"+
		"\u0000\u0000\u0000I\u0112\u0001\u0000\u0000\u0000K\u0114\u0001\u0000\u0000"+
		"\u0000M\u0116\u0001\u0000\u0000\u0000O\u0118\u0001\u0000\u0000\u0000Q"+
		"\u011b\u0001\u0000\u0000\u0000S\u011d\u0001\u0000\u0000\u0000U\u011f\u0001"+
		"\u0000\u0000\u0000W\u0121\u0001\u0000\u0000\u0000Y\u0124\u0001\u0000\u0000"+
		"\u0000[\u0126\u0001\u0000\u0000\u0000]\u0136\u0001\u0000\u0000\u0000_"+
		"\u0148\u0001\u0000\u0000\u0000a\u014e\u0001\u0000\u0000\u0000c\u0154\u0001"+
		"\u0000\u0000\u0000ef\u0005c\u0000\u0000fg\u0005l\u0000\u0000gh\u0005a"+
		"\u0000\u0000hi\u0005s\u0000\u0000ij\u0005s\u0000\u0000j\u0002\u0001\u0000"+
		"\u0000\u0000kl\u0005i\u0000\u0000lm\u0005n\u0000\u0000mn\u0005h\u0000"+
		"\u0000no\u0005e\u0000\u0000op\u0005r\u0000\u0000pq\u0005i\u0000\u0000"+
		"qr\u0005t\u0000\u0000rs\u0005s\u0000\u0000s\u0004\u0001\u0000\u0000\u0000"+
		"tu\u0005n\u0000\u0000uv\u0005e\u0000\u0000vw\u0005w\u0000\u0000w\u0006"+
		"\u0001\u0000\u0000\u0000xy\u0005i\u0000\u0000yz\u0005f\u0000\u0000z\b"+
		"\u0001\u0000\u0000\u0000{|\u0005t\u0000\u0000|}\u0005h\u0000\u0000}~\u0005"+
		"e\u0000\u0000~\u007f\u0005n\u0000\u0000\u007f\n\u0001\u0000\u0000\u0000"+
		"\u0080\u0081\u0005e\u0000\u0000\u0081\u0082\u0005l\u0000\u0000\u0082\u0083"+
		"\u0005s\u0000\u0000\u0083\u0084\u0005e\u0000\u0000\u0084\f\u0001\u0000"+
		"\u0000\u0000\u0085\u0086\u0005f\u0000\u0000\u0086\u0087\u0005i\u0000\u0000"+
		"\u0087\u000e\u0001\u0000\u0000\u0000\u0088\u0089\u0005i\u0000\u0000\u0089"+
		"\u008a\u0005s\u0000\u0000\u008a\u008b\u0005v\u0000\u0000\u008b\u008c\u0005"+
		"o\u0000\u0000\u008c\u008d\u0005i\u0000\u0000\u008d\u008e\u0005d\u0000"+
		"\u0000\u008e\u0010\u0001\u0000\u0000\u0000\u008f\u0090\u0005l\u0000\u0000"+
		"\u0090\u0091\u0005e\u0000\u0000\u0091\u0092\u0005t\u0000\u0000\u0092\u0012"+
		"\u0001\u0000\u0000\u0000\u0093\u0094\u0005i\u0000\u0000\u0094\u0095\u0005"+
		"n\u0000\u0000\u0095\u0014\u0001\u0000\u0000\u0000\u0096\u0097\u0005w\u0000"+
		"\u0000\u0097\u0098\u0005h\u0000\u0000\u0098\u0099\u0005i\u0000\u0000\u0099"+
		"\u009a\u0005l\u0000\u0000\u009a\u009b\u0005e\u0000\u0000\u009b\u0016\u0001"+
		"\u0000\u0000\u0000\u009c\u009d\u0005l\u0000\u0000\u009d\u009e\u0005o\u0000"+
		"\u0000\u009e\u009f\u0005o\u0000\u0000\u009f\u00a0\u0005p\u0000\u0000\u00a0"+
		"\u0018\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005p\u0000\u0000\u00a2\u00a3"+
		"\u0005o\u0000\u0000\u00a3\u00a4\u0005o\u0000\u0000\u00a4\u00a5\u0005l"+
		"\u0000\u0000\u00a5\u001a\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005c\u0000"+
		"\u0000\u00a7\u00a8\u0005a\u0000\u0000\u00a8\u00a9\u0005s\u0000\u0000\u00a9"+
		"\u00aa\u0005e\u0000\u0000\u00aa\u001c\u0001\u0000\u0000\u0000\u00ab\u00ac"+
		"\u0005o\u0000\u0000\u00ac\u00ad\u0005f\u0000\u0000\u00ad\u001e\u0001\u0000"+
		"\u0000\u0000\u00ae\u00af\u0005e\u0000\u0000\u00af\u00b0\u0005s\u0000\u0000"+
		"\u00b0\u00b1\u0005a\u0000\u0000\u00b1\u00b2\u0005c\u0000\u0000\u00b2 "+
		"\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005n\u0000\u0000\u00b4\u00b5\u0005"+
		"o\u0000\u0000\u00b5\u00b6\u0005t\u0000\u0000\u00b6\"\u0001\u0000\u0000"+
		"\u0000\u00b7\u00b8\u0005t\u0000\u0000\u00b8\u00b9\u0005r\u0000\u0000\u00b9"+
		"\u00ba\u0005u\u0000\u0000\u00ba\u00c1\u0005e\u0000\u0000\u00bb\u00bc\u0005"+
		"f\u0000\u0000\u00bc\u00bd\u0005a\u0000\u0000\u00bd\u00be\u0005l\u0000"+
		"\u0000\u00be\u00bf\u0005s\u0000\u0000\u00bf\u00c1\u0005e\u0000\u0000\u00c0"+
		"\u00b7\u0001\u0000\u0000\u0000\u00c0\u00bb\u0001\u0000\u0000\u0000\u00c1"+
		"$\u0001\u0000\u0000\u0000\u00c2\u00c3\u0007\u0000\u0000\u0000\u00c3&\u0001"+
		"\u0000\u0000\u0000\u00c4\u00c5\u0007\u0001\u0000\u0000\u00c5(\u0001\u0000"+
		"\u0000\u0000\u00c6\u00c7\u0007\u0002\u0000\u0000\u00c7*\u0001\u0000\u0000"+
		"\u0000\u00c8\u00ce\u0003\'\u0013\u0000\u00c9\u00cd\u0003%\u0012\u0000"+
		"\u00ca\u00cd\u0003/\u0017\u0000\u00cb\u00cd\u0005_\u0000\u0000\u00cc\u00c9"+
		"\u0001\u0000\u0000\u0000\u00cc\u00ca\u0001\u0000\u0000\u0000\u00cc\u00cb"+
		"\u0001\u0000\u0000\u0000\u00cd\u00d0\u0001\u0000\u0000\u0000\u00ce\u00cc"+
		"\u0001\u0000\u0000\u0000\u00ce\u00cf\u0001\u0000\u0000\u0000\u00cf,\u0001"+
		"\u0000\u0000\u0000\u00d0\u00ce\u0001\u0000\u0000\u0000\u00d1\u00d7\u0003"+
		")\u0014\u0000\u00d2\u00d6\u0003%\u0012\u0000\u00d3\u00d6\u0005_\u0000"+
		"\u0000\u00d4\u00d6\u0003/\u0017\u0000\u00d5\u00d2\u0001\u0000\u0000\u0000"+
		"\u00d5\u00d3\u0001\u0000\u0000\u0000\u00d5\u00d4\u0001\u0000\u0000\u0000"+
		"\u00d6\u00d9\u0001\u0000\u0000\u0000\u00d7\u00d5\u0001\u0000\u0000\u0000"+
		"\u00d7\u00d8\u0001\u0000\u0000\u0000\u00d8.\u0001\u0000\u0000\u0000\u00d9"+
		"\u00d7\u0001\u0000\u0000\u0000\u00da\u00db\u0007\u0003\u0000\u0000\u00db"+
		"0\u0001\u0000\u0000\u0000\u00dc\u00de\u0003/\u0017\u0000\u00dd\u00dc\u0001"+
		"\u0000\u0000\u0000\u00de\u00df\u0001\u0000\u0000\u0000\u00df\u00dd\u0001"+
		"\u0000\u0000\u0000\u00df\u00e0\u0001\u0000\u0000\u0000\u00e02\u0001\u0000"+
		"\u0000\u0000\u00e1\u00ee\u0005\"\u0000\u0000\u00e2\u00e3\u0005\\\u0000"+
		"\u0000\u00e3\u00ed\u0005\"\u0000\u0000\u00e4\u00e5\u0005\\\u0000\u0000"+
		"\u00e5\u00e6\u0005\r\u0000\u0000\u00e6\u00ed\u0005\n\u0000\u0000\u00e7"+
		"\u00e8\u0005\\\u0000\u0000\u00e8\u00ed\u0005\n\u0000\u0000\u00e9\u00ea"+
		"\u0005\u0000\u0000\u0000\u00ea\u00ed\u0006\u0019\u0000\u0000\u00eb\u00ed"+
		"\t\u0000\u0000\u0000\u00ec\u00e2\u0001\u0000\u0000\u0000\u00ec\u00e4\u0001"+
		"\u0000\u0000\u0000\u00ec\u00e7\u0001\u0000\u0000\u0000\u00ec\u00e9\u0001"+
		"\u0000\u0000\u0000\u00ec\u00eb\u0001\u0000\u0000\u0000\u00ed\u00f0\u0001"+
		"\u0000\u0000\u0000\u00ee\u00ef\u0001\u0000\u0000\u0000\u00ee\u00ec\u0001"+
		"\u0000\u0000\u0000\u00ef\u00fb\u0001\u0000\u0000\u0000\u00f0\u00ee\u0001"+
		"\u0000\u0000\u0000\u00f1\u00f2\u0005\u0000\u0000\u0001\u00f2\u00fc\u0006"+
		"\u0019\u0001\u0000\u00f3\u00f7\u0005\n\u0000\u0000\u00f4\u00f5\u0005\r"+
		"\u0000\u0000\u00f5\u00f7\u0005\n\u0000\u0000\u00f6\u00f3\u0001\u0000\u0000"+
		"\u0000\u00f6\u00f4\u0001\u0000\u0000\u0000\u00f7\u00f8\u0001\u0000\u0000"+
		"\u0000\u00f8\u00fc\u0006\u0019\u0002\u0000\u00f9\u00fa\u0005\"\u0000\u0000"+
		"\u00fa\u00fc\u0006\u0019\u0003\u0000\u00fb\u00f1\u0001\u0000\u0000\u0000"+
		"\u00fb\u00f6\u0001\u0000\u0000\u0000\u00fb\u00f9\u0001\u0000\u0000\u0000"+
		"\u00fc4\u0001\u0000\u0000\u0000\u00fd\u00fe\u0005;\u0000\u0000\u00fe6"+
		"\u0001\u0000\u0000\u0000\u00ff\u0100\u0005,\u0000\u0000\u01008\u0001\u0000"+
		"\u0000\u0000\u0101\u0102\u0005<\u0000\u0000\u0102\u0103\u0005-\u0000\u0000"+
		"\u0103:\u0001\u0000\u0000\u0000\u0104\u0105\u0005(\u0000\u0000\u0105<"+
		"\u0001\u0000\u0000\u0000\u0106\u0107\u0005)\u0000\u0000\u0107>\u0001\u0000"+
		"\u0000\u0000\u0108\u0109\u0005{\u0000\u0000\u0109@\u0001\u0000\u0000\u0000"+
		"\u010a\u010b\u0005}\u0000\u0000\u010bB\u0001\u0000\u0000\u0000\u010c\u010d"+
		"\u0005+\u0000\u0000\u010dD\u0001\u0000\u0000\u0000\u010e\u010f\u0005-"+
		"\u0000\u0000\u010fF\u0001\u0000\u0000\u0000\u0110\u0111\u0005*\u0000\u0000"+
		"\u0111H\u0001\u0000\u0000\u0000\u0112\u0113\u0005/\u0000\u0000\u0113J"+
		"\u0001\u0000\u0000\u0000\u0114\u0115\u0005=\u0000\u0000\u0115L\u0001\u0000"+
		"\u0000\u0000\u0116\u0117\u0005<\u0000\u0000\u0117N\u0001\u0000\u0000\u0000"+
		"\u0118\u0119\u0005<\u0000\u0000\u0119\u011a\u0005=\u0000\u0000\u011aP"+
		"\u0001\u0000\u0000\u0000\u011b\u011c\u0005:\u0000\u0000\u011cR\u0001\u0000"+
		"\u0000\u0000\u011d\u011e\u0005@\u0000\u0000\u011eT\u0001\u0000\u0000\u0000"+
		"\u011f\u0120\u0005.\u0000\u0000\u0120V\u0001\u0000\u0000\u0000\u0121\u0122"+
		"\u0005=\u0000\u0000\u0122\u0123\u0005>\u0000\u0000\u0123X\u0001\u0000"+
		"\u0000\u0000\u0124\u0125\u0005~\u0000\u0000\u0125Z\u0001\u0000\u0000\u0000"+
		"\u0126\u0127\u0005-\u0000\u0000\u0127\u0128\u0005-\u0000\u0000\u0128\u012c"+
		"\u0001\u0000\u0000\u0000\u0129\u012b\t\u0000\u0000\u0000\u012a\u0129\u0001"+
		"\u0000\u0000\u0000\u012b\u012e\u0001\u0000\u0000\u0000\u012c\u012d\u0001"+
		"\u0000\u0000\u0000\u012c\u012a\u0001\u0000\u0000\u0000\u012d\u0132\u0001"+
		"\u0000\u0000\u0000\u012e\u012c\u0001\u0000\u0000\u0000\u012f\u0130\u0005"+
		"\r\u0000\u0000\u0130\u0133\u0005\n\u0000\u0000\u0131\u0133\u0007\u0004"+
		"\u0000\u0000\u0132\u012f\u0001\u0000\u0000\u0000\u0132\u0131\u0001\u0000"+
		"\u0000\u0000\u0133\u0134\u0001\u0000\u0000\u0000\u0134\u0135\u0006-\u0004"+
		"\u0000\u0135\\\u0001\u0000\u0000\u0000\u0136\u0137\u0005(\u0000\u0000"+
		"\u0137\u0138\u0005*\u0000\u0000\u0138\u013d\u0001\u0000\u0000\u0000\u0139"+
		"\u013c\u0003].\u0000\u013a\u013c\t\u0000\u0000\u0000\u013b\u0139\u0001"+
		"\u0000\u0000\u0000\u013b\u013a\u0001\u0000\u0000\u0000\u013c\u013f\u0001"+
		"\u0000\u0000\u0000\u013d\u013e\u0001\u0000\u0000\u0000\u013d\u013b\u0001"+
		"\u0000\u0000\u0000\u013e\u0146\u0001\u0000\u0000\u0000\u013f\u013d\u0001"+
		"\u0000\u0000\u0000\u0140\u0141\u0005\u0000\u0000\u0001\u0141\u0147\u0006"+
		".\u0005\u0000\u0142\u0143\u0005*\u0000\u0000\u0143\u0144\u0005)\u0000"+
		"\u0000\u0144\u0145\u0001\u0000\u0000\u0000\u0145\u0147\u0006.\u0006\u0000"+
		"\u0146\u0140\u0001\u0000\u0000\u0000\u0146\u0142\u0001\u0000\u0000\u0000"+
		"\u0147^\u0001\u0000\u0000\u0000\u0148\u0149\u0005*\u0000\u0000\u0149\u014a"+
		"\u0005)\u0000\u0000\u014a\u014b\u0001\u0000\u0000\u0000\u014b\u014c\u0006"+
		"/\u0007\u0000\u014c`\u0001\u0000\u0000\u0000\u014d\u014f\u0007\u0005\u0000"+
		"\u0000\u014e\u014d\u0001\u0000\u0000\u0000\u014f\u0150\u0001\u0000\u0000"+
		"\u0000\u0150\u014e\u0001\u0000\u0000\u0000\u0150\u0151\u0001\u0000\u0000"+
		"\u0000\u0151\u0152\u0001\u0000\u0000\u0000\u0152\u0153\u00060\u0004\u0000"+
		"\u0153b\u0001\u0000\u0000\u0000\u0154\u0155\t\u0000\u0000\u0000\u0155"+
		"\u0156\u00061\b\u0000\u0156d\u0001\u0000\u0000\u0000\u0011\u0000\u00c0"+
		"\u00cc\u00ce\u00d5\u00d7\u00df\u00ec\u00ee\u00f6\u00fb\u012c\u0132\u013b"+
		"\u013d\u0146\u0150\t\u0001\u0019\u0000\u0001\u0019\u0001\u0001\u0019\u0002"+
		"\u0001\u0019\u0003\u0006\u0000\u0000\u0001.\u0004\u0001.\u0005\u0001/"+
		"\u0006\u00011\u0007";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}